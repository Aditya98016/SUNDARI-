const startBtn = document.getElementById("start-btn");
const responsePara = document.getElementById("response");

const speak = (text) => {
    let utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = "hi-IN";
    utterance.rate = 1;
    speechSynthesis.speak(utterance);
};

window.onload = () => {
    setTimeout(() => {
        speak("‡§°‡§ø‡§Ø‡§∞, ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•Ç‡§Å?");
    }, 1000);
};

const listen = () => {
    if (!("webkitSpeechRecognition" in window || "SpeechRecognition" in window)) {
        responsePara.textContent = "‚ùå ‡§Ü‡§™‡§ï‡§æ ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ Speech Recognition ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ‡•§";
        speak("‡§Æ‡•Å‡§ù‡•á ‡§ñ‡•á‡§¶ ‡§π‡•à, ‡§Ü‡§™‡§ï‡§æ ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§Æ‡•Å‡§ù‡•á ‡§∏‡•Å‡§® ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§ï‡§§‡§æ‡•§");
        return;
    }

    let recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
    recognition.lang = "hi-IN";
    recognition.interimResults = false;
    recognition.maxAlternatives = 1;

    recognition.start();

    recognition.onstart = () => {
        responsePara.textContent = "üé§ ‡§∏‡•Å‡§® ‡§∞‡§π‡•Ä ‡§π‡•Ç‡§Å...";
    };

    recognition.onresult = (event) => {
        let command = event.results[0][0].transcript.toLowerCase();
        responsePara.textContent = `üë§ ‡§Ü‡§™‡§®‡•á ‡§ï‡§π‡§æ: ${command}`;

        if (command.includes("‡§ï‡•à‡§∏‡•Ä ‡§π‡•ã")) {
            speak("‡§Æ‡•à‡§Ç ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§π‡•Ç‡§Å, ‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç?");
        } else if (command.includes("‡§®‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à")) {
            speak("‡§Æ‡•á‡§∞‡§æ ‡§®‡§æ‡§Æ ‡§∏‡•Å‡§Ç‡§¶‡§∞‡•Ä ‡§π‡•à‡•§");
        } else if (command.includes("‡§¨‡§Ç‡§¶ ‡§π‡•ã ‡§ú‡§æ‡§ì")) {
            speak("‡§†‡•Ä‡§ï ‡§π‡•à, ‡§Ö‡§≤‡§µ‡§ø‡§¶‡§æ!");
        } else {
            speak("‡§Æ‡•Å‡§ù‡•á ‡§Ø‡§π ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§Æ‡§ù ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§à‡•§");
        }
    };

    recognition.onerror = (error) => {
        console.error("Speech Recognition Error:", error);
        responsePara.textContent = "‚ùå ‡§∏‡•Å‡§®‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•Å‡§à‡•§";
        speak("‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú‡§º ‡§†‡•Ä‡§ï ‡§∏‡•á ‡§∏‡•Å‡§®‡§æ‡§à ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•Ä‡•§");
    };

    recognition.onspeechend = () => {
        recognition.stop();
    };
};

startBtn.addEventListener("click", () => {
    speak("‡§°‡§ø‡§Ø‡§∞, ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•Ç‡§Å?");
    listen();
});
const controlDevice = (command) => {
    if ("wakeLock" in navigator) {
        navigator.wakeLock.request("screen"); // ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§® ‡§ë‡§® ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
    }

    // üî¶ Flashlight Control
    if (command.includes("‡§ü‡•â‡§∞‡•ç‡§ö ‡§ë‡§®")) {
        navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment", torch: true } });
        speak("‡§´‡§º‡•ç‡§≤‡•à‡§∂‡§≤‡§æ‡§á‡§ü ‡§ö‡§æ‡§≤‡•Ç ‡§π‡•ã ‡§ó‡§à‡•§");
    } else if (command.includes("‡§ü‡•â‡§∞‡•ç‡§ö ‡§¨‡§Ç‡§¶")) {
        navigator.mediaDevices.getUserMedia({ video: false });
        speak("‡§´‡§º‡•ç‡§≤‡•à‡§∂‡§≤‡§æ‡§á‡§ü ‡§¨‡§Ç‡§¶ ‡§ï‡§∞ ‡§¶‡•Ä ‡§ó‡§à‡•§");
    }

    // üîä Volume Control
    if (command.includes("‡§µ‡•â‡§≤‡•ç‡§Ø‡•Ç‡§Æ ‡§¨‡§¢‡§º‡§æ‡§ì")) {
        let audio = document.createElement("audio");
        audio.volume = Math.min(audio.volume + 0.1, 1);
        speak("‡§µ‡•â‡§≤‡•ç‡§Ø‡•Ç‡§Æ ‡§¨‡§¢‡§º‡§æ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ‡•§");
    } else if (command.includes("‡§µ‡•â‡§≤‡•ç‡§Ø‡•Ç‡§Æ ‡§ò‡§ü‡§æ‡§ì")) {
        let audio = document.createElement("audio");
        audio.volume = Math.max(audio.volume - 0.1, 0);
        speak("‡§µ‡•â‡§≤‡•ç‡§Ø‡•Ç‡§Æ ‡§ò‡§ü‡§æ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ‡•§");
    }

    // üåû Brightness Control
    if (command.includes("‡§¨‡•ç‡§∞‡§æ‡§á‡§ü‡§®‡•á‡§∏ ‡§¨‡§¢‡§º‡§æ‡§ì")) {
        document.body.style.filter = "brightness(150%)";
        speak("‡§¨‡•ç‡§∞‡§æ‡§á‡§ü‡§®‡•á‡§∏ ‡§¨‡§¢‡§º‡§æ ‡§¶‡•Ä ‡§ó‡§à‡•§");
    } else if (command.includes("‡§¨‡•ç‡§∞‡§æ‡§á‡§ü‡§®‡•á‡§∏ ‡§ò‡§ü‡§æ‡§ì")) {
        document.body.style.filter = "brightness(50%)";
        speak("‡§¨‡•ç‡§∞‡§æ‡§á‡§ü‡§®‡•á‡§∏ ‡§ò‡§ü‡§æ ‡§¶‡•Ä ‡§ó‡§à‡•§");
    }
};
